name: Wails build
'on':
  workflow_dispatch: null
  push:
    tags:
      - v*
env:
  NODE_OPTIONS: '--max-old-space-size=4096'
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build:
          - platform:windows/amd64
            os:windows-latest
    runs-on: '${{ matrix.build.os }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Windows get Go version from go.mod
        if: runner.os == 'Windows'
        run: >-
          Add-Content -Path ${env:GITHUB_ENV} -Value "GO_VERSION=$(go mod edit
          -json | jq -r '(.Go)')"
      - name: Linux/MacOS get Go Version from go.mod
        if: runner.os != 'Windows'
        run: >-
          echo "GO_VERSION=$(go mod edit -json | jq -r '(.Go)')" >>
          "$GITHUB_ENV"
      - name: Windows get Wails version from go.mod
        if: runner.os == 'Windows'
        run: >-
          Add-Content -Path ${env:GITHUB_ENV} -Value "WAILS_VERSION=$(go mod
          edit -json | jq -r '(.Require.[] |
          (select(.Path==\"github.com\/wailsapp\/wails\/v2\").Version | split(
          \"v\" )[1]))')"
      - name: Linux/MacOS get Wails Version from go.mod
        if: runner.os != 'Windows'
        run: >-
          echo "GO_VERSION=$(go mod edit -json | jq -r '(.Require.[] |
          (select(.Path==\"github.com\/wailsapp\/wails\/v2\").Version | split(
          "v" )[1]))')" >> "$GITHUB_ENV"
      - name: Build wails
        uses: dAppServer/wails-build-action@v2.2
        id: build
        with:
          build-name: SaveTracker
          build-platform: windows/amd64
          package: true
          go-version: '${{ env.GO_VERSION }}'
          wails-version: '${{ env.WAILS_VERSION  }}'
